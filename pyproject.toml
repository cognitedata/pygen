[tool.poetry]
name = "cognite-pygen"
version = "0.11.1"
description = "Cognite Python SDK Generator"
readme = "README.md"
authors = ["Cognite <support@cognite.com>"]
license = "Apache-2.0"
documentation = "https://cognite-pygen.readthedocs-hosted.com/en/latest/"
homepage = "https://cognite-pygen.readthedocs-hosted.com/en/latest/"
repository = "https://github.com/cognitedata/pygen"
packages = [{ include="cognite", from="." }]

[tool.black]
line-length = 120
target_version = ['py39']
include = '\.py$'

[tool.isort]
line_length=120                # corresponds to -w  flag
multi_line_output=3            # corresponds to -m  flag
include_trailing_comma=true    # corresponds to -tc flag
skip_glob = '^((?!py$).)*$'    # this makes sort all Python files
known_third_party = []
src_paths = [".", "examples"]

[tool.pygen]
space = "IntegrationTestsImmutable"
external_id = "Movie"
version = "2"
tenant_id = "<cdf-project>"
client_id = "<client-id>"
cdf_cluster = "<cdf-cluster>"
cdf_project = "<cdf-project>"
top_level_package = "movie_domain.client"
client_name = "MovieClient"

[tool.poetry.scripts]
pygen = "cognite.pygen.cli:main"


[tool.poetry.dependencies]
python = "^3.9"
cognite-sdk = {version = ">=6.5.8"}
pydantic = ">=1.10"
Jinja2 = ">=3.1"
inflect = ">=6.0"

toml = {version=">=0.10", optional=true}
packaging = {version=">=21.3", optional=true}
typer = {version = ">=0.9", extras = ["rich"], optional=true }

mkdocs =  {version="*", optional=true}
mkdocs-jupyter = {version="*", optional=true}
mkdocs-material = {version="*", optional=true}
mkdocs-material-extensions = {version="*", optional=true}
mkdocs-git-revision-date-localized-plugin = {version="*", optional=true}
mkdocs-git-authors-plugin = {version="*", optional=true}
mkdocs-gitbook = {version="*", optional=true}
mkdocs-glightbox = {version="*", optional=true}
pymdown-extensions = {version="*", optional=true}
mkdocstrings = {version="*", optional=true, extras=["python"]}

[tool.poetry.extras]
cli = ["packaging", "typer", "toml"]
docs = ["mkdocs", "mkdocs-jupyter", "mkdocs-material", "mkdocs-material-extensions", "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-git-authors-plugin", "mkdocs-gitbook", "mkdocs-glightbox", "pymdown-extensions", "mkdocstrings"]
all = ["packaging", "typer", "toml"]

[tool.poetry.dev-dependencies]
twine = "*"
pre-commit = "*"
python-dotenv = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
faker = "*"
toml = "*"
pandas = "*"
black = "23.3.0"
pyyaml = "*"

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::DeprecationWarning:pkg_resources",  # TODO check again with dynaconf>=3.2.0 (introduced in setuptools==67.5.0)
]
addopts = "--doctest-modules"
markers = [
    "full: Requiers all optional dependencies to run.",
]
pythonpath = [".", "examples"]
testpaths = ["tests", "cognite/pygen"]

[build-system]
requires = ["poetry-core>=1.3"]
build-backend = "poetry.core.masonry.api"
