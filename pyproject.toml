[tool.poetry]
name = "cognite-pygen"
version = "0.9.0"
description = "Cognite GraphQL Python Generation SDK"
readme = "README.md"
authors = ["Cognite <support@cognite.com>"]
license = "Apache-2.0"

packages = [{ include="cognite", from="." }]
exclude = ["cognite/dm_clients/*.toml"]

[tool.black]
line-length = 120
target_version = ['py39']
include = '\.py$'

[tool.isort]
line_length=120                # corresponds to -w  flag
multi_line_output=3            # corresponds to -m  flag
include_trailing_comma=true    # corresponds to -tc flag
skip_glob = '^((?!py$).)*$'    # this makes sort all Python files
known_third_party = []
src_paths = [".", "examples"]

[tool.poetry.scripts]
pygen = "cognite.pygen.main:main"


[tool.poetry.dependencies]
python = "^3.9"
pydantic = ">=1.10"
graphql-core = ">=3.2"
Jinja2 = ">=3.1"
cognite-sdk = {version = ">5.9.0"}
msal = ">=1.16.0"
retry = ">=0.9.2"
strawberry-graphql = "^0.156.4"
cachelib = ">=0.10.2"
typing-extensions = ">=4.4.0"
dynaconf = {version=">=3.1.12"}
toml = {version=">=0.10"}

packaging = {version=">=21.3", optional=true}
typer = {version = ">=0.9", extras = ["rich"], optional=true }

[tool.poetry.extras]
cli = ["packaging", "typer"]
all = ["packaging", "typer"]

[tool.poetry.dev-dependencies]
twine = "*"
pre-commit = "*"
python-dotenv = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
faker = "*"
mkdocs = "*"
mkdocs-jupyter = "*"
mkdocs-material-extensions = "*"
mkdocs-git-revision-date-localized-plugin = "*"
mkdocs-git-authors-plugin = "*"
mkdocs-gitbook = "*"

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::DeprecationWarning:pkg_resources",  # TODO check again with dynaconf>=3.2.0 (introduced in setuptools==67.5.0)
]
addopts = "--doctest-modules"
markers = [
    "full: Requiers all optional dependencies to run.",
]


[build-system]
requires = ["poetry-core>=1.3"]
build-backend = "poetry.core.masonry.api"
